@model DocumentFlow.Models.IncomingDocumentModel

@{
    ViewBag.Title = "Добавить документ";
}

<h2>Добавить документ</h2>

@using (Html.BeginForm("Create", "IncomingDocument", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Входящие документы</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocIndex, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.DocIndex, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocIndex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeadResolution, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
               @* @Html.EditorFor(model => model.LeadResolution, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.LeadResolution, "", new { @class = "text-danger" })
            </div>

            @*<div class="col-md-9">
                <select id="LeadResolution" name="LeadResolution">
                    <option value="Иванов И. И.">Иванов И. И.</option>
                    <option value="Петров П. П.">Петров П. П.</option>
                </select>
            </div>*@

            <div class="col-md-9">
                <select id="LeadResolutionLogin" name='LeadResolutionLogin' class="form-control">
                    <option value="ivanovivan@mail.ru">Иванов И. И.</option>
                    <option value="petrovoleg@mail.ru">Петров П. П.</option>
                </select>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SaveTime, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.SaveTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SaveTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentFile, htmlAttributes: new { @class = "control-label col-md-3" })
            @*<div class="col-md-10">
                @Html.EditorFor(model => model.DocumentFile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentFile, "", new { @class = "text-danger" })
            </div>*@
            <div class="col-md-9">
                <input type="file" name="upload"  />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку документов", "Index", "IncomingDocument", null, new { @class= "btn btn-default"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
