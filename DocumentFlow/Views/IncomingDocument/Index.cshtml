@model IEnumerable<DocumentFlow.Models.IncomingDocumentModel>

@{
    ViewBag.Title = "Система документооборота";
}

<h2>@ViewBag.Title. Панель делопроизводителя</h2>

<p>
    @Html.ActionLink("Добавить документ", "Create", "IncomingDocument", null, new { @class = "btn btn-default" })
</p>
@if (User.IsInRole("viewer") || User.IsInRole("docmaker"))
{
    <form asp-controller="IncomingDocumentController" asp-action="Index">
        <div class="input-group">
            <input type="text" name="SearchString" class="form-control" placeholder="Поиск по индексу документа">
            <span class="input-group-btn" style="width:0;">
                <button class="btn btn-default" type="submit">Фильтр</button>
            </span>
        </div>
    </form>
    <br />
}
<table class="table">
    <tr>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.DocIndex)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.LeadResolution)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.LeadResolutionLogin)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.SaveTime)
        </th>
        <th class="text-center">
            Осталось дней
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.DocumentFile)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.NoteToDocument)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DocIndex)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LeadResolution)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LeadResolutionLogin, new { htmlAttributes = new { @class = "text-center" } }) 
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SaveTime)
            </td>
            <td class="text-center">
                @(item.SaveTime.Subtract(DateTime.Today).TotalDays)
                @if ((item.SaveTime.Subtract(DateTime.Today).TotalDays) < 0)
                {
                    <p style="color: red">Просрочен</p>
                }
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.DocumentFile)*@
                <a href="~/IncomingDocuments.Files/@Html.DisplayFor(modelItem => item.DocumentFile)">Скачать файл</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NoteToDocument)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink("Редактировать", "Edit", new { id = item.Id }) |
                @*@Html.ActionLink("Детали", "Details", new { id = item.Id }) |*@
                @Html.ActionLink("Удалить", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
